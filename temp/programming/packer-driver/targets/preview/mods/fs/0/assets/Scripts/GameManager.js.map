{"version":3,"sources":["file:///D:/Craft-Monsters/Craft-Monsters/assets/Scripts/GameManager.ts"],"names":["_decorator","Component","PhysicsSystem2D","director","MapManager","MonsterManager","UIManager","ccclass","property","GameState","State","GameManager","type","start","uiManager","setMenuUIActive","instance","enable","on","GAME_OVER","_timeCountFinished","_setInputActive","GAME_WIN","node","monsterManager","touchMove","touch","touchEnd","update","dt","_counting","_timer","init","event","mode","setResultUIActive","setModeUIActive","setInGameUIActive","clearLevel","mapManager","resetTile","scheduleOnce","generateMonsterSpawnList","spawnMonsterOnce","emit","START","HARD_MODE","exit","console","info","min","sec","Math","floor","setTimerLabel","active","off"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,Q,OAAAA,Q;;AAC9CC,MAAAA,U,eAAAA,U;;AACAC,MAAAA,c,mBAAAA,c;;AACAC,MAAAA,S,cAAAA,S;;;;;;;AACDC,MAAAA,O,GAAsBP,U,CAAtBO,O;AAASC,MAAAA,Q,GAAaR,U,CAAbQ,Q;;iBAGZC,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;AAAAA,QAAAA,S;SAAAA,S,KAAAA,S;;iBAUAC,K;AAAAA,QAAAA,K;AAAAA,QAAAA,K;AAAAA,QAAAA,K;AAAAA,QAAAA,K;AAAAA,QAAAA,K;SAAAA,K,KAAAA,K;;6BAUQC,W,WADZJ,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAAC;AACNI,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C,UAIRJ,QAAQ,CAAC;AACNI,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C,UAIRJ,QAAQ,CAAC;AACNI,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C;;;;;;;;;;;;;;;;;;mEASgB,C;;sEACI,K;;;;;;;eAG7BC,K,GAAA,iBAAS;AAAA;;AACL,eAAKC,SAAL,CAAeC,eAAf,GADK,CAC4B;;AACjCb,UAAAA,eAAe,CAACc,QAAhB,CAAyBC,MAAzB,GAAkC,IAAlC;AAEAd,UAAAA,QAAQ,CAACe,EAAT,CAAYP,WAAW,CAACF,SAAZ,CAAsBU,SAAlC,EAA6C,KAAKC,kBAAlD,EAAsE,IAAtE,EAJK,CAIuE;;AAC5EjB,UAAAA,QAAQ,CAACe,EAAT,CAAYP,WAAW,CAACF,SAAZ,CAAsBU,SAAlC,EAA6C,YAAM;AAAC,YAAA,MAAI,CAACE,eAAL,CAAqB,KAArB;AAA4B,WAAhF,EAAkF,IAAlF,EALK,CAKmF;;AACxFlB,UAAAA,QAAQ,CAACe,EAAT,CAAYP,WAAW,CAACF,SAAZ,CAAsBa,QAAlC,EAA4C,KAAKF,kBAAjD,EAAqE,IAArE,EANK,CAMsE;;AAC3EjB,UAAAA,QAAQ,CAACe,EAAT,CAAYP,WAAW,CAACF,SAAZ,CAAsBa,QAAlC,EAA4C,YAAM;AAAC,YAAA,MAAI,CAACD,eAAL,CAAqB,KAArB;AAA4B,WAA/E,EAAiF,IAAjF,EAPK,CAOkF;;AAEvF,eAAKE,IAAL,CAAUL,EAAV,CAAa,YAAb,EAA2B,KAAKM,cAAL,CAAoBC,SAA/C,EAA0D,KAAKD,cAA/D,EATK,CAS0E;;AAC/E,eAAKD,IAAL,CAAUL,EAAV,CAAa,aAAb,EAA4B,KAAKM,cAAL,CAAoBE,KAAhD,EAAuD,KAAKF,cAA5D,EAVK,CAUuE;;AAC5E,eAAKD,IAAL,CAAUL,EAAV,CAAa,WAAb,EAA0B,KAAKM,cAAL,CAAoBG,QAA9C,EAAwD,KAAKH,cAA7D,EAXK,CAWwE;AAChF,S;;eAGDI,M,GAAA,gBAAOC,EAAP,EAAmB;AACf,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKC,MAAL,IAAeF,EAAf;AACH;AACJ,S;;eAGDG,I,GAAA,cAAKC,KAAL,EAAmBC,IAAnB,EAAiC;AAAA;;AAC7B,eAAKH,MAAL,GAAc,CAAd,CAD6B,CACb;;AAEhB,eAAKjB,SAAL,CAAeC,eAAf,CAA+B,KAA/B,EAH6B,CAGS;;AACtC,eAAKD,SAAL,CAAeqB,iBAAf,CAAiC,KAAjC,EAJ6B,CAIW;;AACxC,eAAKrB,SAAL,CAAesB,eAAf,CAA+B,KAA/B,EAL6B,CAKS;;AACtC,eAAKtB,SAAL,CAAeuB,iBAAf,GAN6B,CAMM;;AAEnC,eAAKb,cAAL,CAAoBc,UAApB,GAR6B,CAQI;;AACjC,eAAKC,UAAL,CAAgBC,SAAhB,CAA0BN,IAA1B,EAT6B,CASG;;AAEhC,eAAKO,YAAL,CAAkB,YAAM;AACpB,YAAA,MAAI,CAACjB,cAAL,CAAoBkB,wBAApB,GADoB,CAC2B;;;AAC/C,YAAA,MAAI,CAAClB,cAAL,CAAoBmB,gBAApB,GAFoB,CAEmB;;;AACvC,YAAA,MAAI,CAACb,SAAL,GAAiB,IAAjB,CAHoB,CAGE;AACzB,WAJD,EAIG,CAJH;AAMA3B,UAAAA,QAAQ,CAACyC,IAAT,CAAcnC,SAAS,CAACoC,KAAxB;;AACA,cAAIX,IAAI,KAAK,MAAb,EAAqB;AACjB/B,YAAAA,QAAQ,CAACyC,IAAT,CAAcnC,SAAS,CAACqC,SAAxB;AACH;;AAED,eAAKzB,eAAL,GAtB6B,CAsBN;;AAC1B,S;;eAGD0B,I,GAAA,gBAAO;AACHC,UAAAA,OAAO,CAACC,IAAR,CAAa,kCAAb;AACH,S;;eAEO7B,kB,GAAR,8BAA6B;AACzB,eAAKU,SAAL,GAAiB,KAAjB;AACA,cAAIoB,GAAoB,GAAG,CAA3B;AACA,cAAIC,GAAoB,GAAG,CAA3B;AAEA,eAAKpB,MAAL,GAAcqB,IAAI,CAACC,KAAL,CAAW,KAAKtB,MAAhB,CAAd;AACAmB,UAAAA,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAW,KAAKtB,MAAL,GAAc,EAAzB,CAAN;AACAoB,UAAAA,GAAG,GAAG,KAAKpB,MAAL,GAAemB,GAAG,GAAG,EAA3B;AAEAA,UAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAA7B;AACAC,UAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,MAAMA,GAAjB,GAAuBA,GAA7B;AAEA,eAAKrC,SAAL,CAAewC,aAAf,CAA6BJ,GAA7B,EAAkCC,GAAlC;AACH,S;;eAEO9B,e,GAAR,yBAAwBkC,MAAxB,EAAgD;AAAA,cAAxBA,MAAwB;AAAxBA,YAAAA,MAAwB,GAAN,IAAM;AAAA;;AAC5C,cAAIA,MAAJ,EAAY;AACR,iBAAKhC,IAAL,CAAUL,EAAV,CAAa,YAAb,EAA2B,KAAKM,cAAL,CAAoBC,SAA/C,EAA0D,KAAKD,cAA/D,EADQ,CACuE;;AAC/E,iBAAKD,IAAL,CAAUL,EAAV,CAAa,aAAb,EAA4B,KAAKM,cAAL,CAAoBE,KAAhD,EAAuD,KAAKF,cAA5D,EAFQ,CAEoE;;AAC5E,iBAAKD,IAAL,CAAUL,EAAV,CAAa,WAAb,EAA0B,KAAKM,cAAL,CAAoBG,QAA9C,EAAwD,KAAKH,cAA7D,EAHQ,CAGqE;AAChF,WAJD,MAIO;AACH,iBAAKD,IAAL,CAAUiC,GAAV,CAAc,YAAd,EADG,CACyB;;AAC5B,iBAAKjC,IAAL,CAAUiC,GAAV,CAAc,aAAd,EAFG,CAE0B;;AAC7B,iBAAKjC,IAAL,CAAUiC,GAAV,CAAc,WAAd,EAHG,CAGwB;AAC9B;AACJ,S;;;QApG4BvD,S,qCAgBPS,K,yCACID,S;;;;;iBAZO,I;;;;;;;iBAIV,I;;;;;;;iBAIE,I","sourcesContent":["\r\nimport { _decorator, Component, Node, PhysicsSystem2D, director, log } from 'cc';\r\nimport { MapManager } from './MapManager';\r\nimport { MonsterManager } from './MonsterManager';\r\nimport { UIManager } from './UIManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\nenum GameState {\r\n    MENU = 'menu',\r\n    START = 'start',\r\n    HARD_MODE = 'hard-mode',\r\n    TILE_MOVE = 'tile-move',\r\n    IN_GAME = 'in-game',\r\n    GAME_WIN = 'game-win', // 游戏胜利\r\n    GAME_OVER = 'game-over' // 游戏失败\r\n}\r\n\r\nenum State {\r\n    INIT = 'init', // 怪物初始数量\r\n    CRAFT = 'craft', // 怪物合成\r\n    MONSTER_CHANGE = 'monster-change', // 怪物数量变化\r\n    SCORE_SPAWN = 'score-spawn', // 生成分数\r\n    SCORE_ADD = 'score-add', // 分数增加\r\n}\r\n\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n\r\n    @property({\r\n        type: MonsterManager\r\n    })\r\n    monsterManager: MonsterManager = null!\r\n    @property({\r\n        type: UIManager\r\n    })\r\n    uiManager: UIManager = null!\r\n    @property({\r\n        type: MapManager\r\n    })\r\n    mapManager: MapManager = null!\r\n\r\n\r\n    public static State = State\r\n    public static GameState = GameState\r\n\r\n    private _timer: number = 0\r\n    private _counting: boolean = false\r\n    \r\n\r\n    start () {\r\n        this.uiManager.setMenuUIActive() // 游戏开始时打开菜单 UI\r\n        PhysicsSystem2D.instance.enable = true\r\n\r\n        director.on(GameManager.GameState.GAME_OVER, this._timeCountFinished, this) // 游戏结束时停止统计时长\r\n        director.on(GameManager.GameState.GAME_OVER, () => {this._setInputActive(false)}, this) // 游戏结束时禁止操作\r\n        director.on(GameManager.GameState.GAME_WIN, this._timeCountFinished, this) // 游戏结束时停止统计时长\r\n        director.on(GameManager.GameState.GAME_WIN, () => {this._setInputActive(false)}, this) // 游戏结束时禁止操作\r\n\r\n        this.node.on('touch-move', this.monsterManager.touchMove, this.monsterManager) // 手指移动\r\n        this.node.on('touch-start', this.monsterManager.touch, this.monsterManager) // 手指点击\r\n        this.node.on('touch-end', this.monsterManager.touchEnd, this.monsterManager) // 手指松开\r\n    }\r\n\r\n\r\n    update(dt: number) {\r\n        if (this._counting) {\r\n            this._timer += dt\r\n        }\r\n    }\r\n\r\n\r\n    init(event: Event, mode: string) {\r\n        this._timer = 0 // 重置计时\r\n\r\n        this.uiManager.setMenuUIActive(false) // 关闭菜单 UI\r\n        this.uiManager.setResultUIActive(false) // 关闭结算 UI\r\n        this.uiManager.setModeUIActive(false) // 关闭菜单 UI\r\n        this.uiManager.setInGameUIActive() // 打开游戏 UI\r\n\r\n        this.monsterManager.clearLevel() // 清空关卡\r\n        this.mapManager.resetTile(mode) // reset Tile\r\n\r\n        this.scheduleOnce(() => {\r\n            this.monsterManager.generateMonsterSpawnList() // 生成数组\r\n            this.monsterManager.spawnMonsterOnce() // 生成第一只怪物\r\n            this._counting = true // 开始计时\r\n        }, 1)\r\n\r\n        director.emit(GameState.START)\r\n        if (mode === 'hard') {\r\n            director.emit(GameState.HARD_MODE)\r\n        }\r\n\r\n        this._setInputActive() // 游戏开始再允许操作\r\n    }\r\n\r\n\r\n    exit() {\r\n        console.info(\"exit game button................\")\r\n    }\r\n\r\n    private _timeCountFinished() {\r\n        this._counting = false\r\n        let min: number | string = 0\r\n        let sec: number | string = 0\r\n\r\n        this._timer = Math.floor(this._timer)\r\n        min = Math.floor(this._timer / 60)\r\n        sec = this._timer - (min * 60)\r\n\r\n        min = min < 10 ? '0' + min : min\r\n        sec = sec < 10 ? '0' + sec : sec\r\n\r\n        this.uiManager.setTimerLabel(min, sec)\r\n    }\r\n\r\n    private _setInputActive(active: boolean = true) {\r\n        if (active) {\r\n            this.node.on('touch-move', this.monsterManager.touchMove, this.monsterManager) // 手指移动\r\n            this.node.on('touch-start', this.monsterManager.touch, this.monsterManager) // 手指点击\r\n            this.node.on('touch-end', this.monsterManager.touchEnd, this.monsterManager) // 手指松开\r\n        } else {\r\n            this.node.off('touch-move') // 手指移动\r\n            this.node.off('touch-start') // 手指点击\r\n            this.node.off('touch-end') // 手指松开\r\n        }\r\n    }\r\n\r\n}\r\n"]}