{"version":3,"sources":["file:///D:/Craft-Monsters/Craft-Monsters/assets/Scripts/MapManager.ts"],"names":["_decorator","Component","Node","Vec3","resources","find","instantiate","log","Prefab","view","director","GameManager","ccclass","property","MapManager","Math","floor","getVisibleSize","y","start","_basedMapPos","basedMap","getWorldPosition","on","GameState","HARD_MODE","_spawnEarthTile","cur","i","_earthTileNum","_loadEarthTile","z","scheduleOnce","emit","TILE_MOVE","pos","load","err","prefab","earthTile","setParent","setPosition","resetTile","mode","mapNodes","removeAllChildren","setWorldPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;;AACpFC,MAAAA,W,gBAAAA,W;;;;;;;AACDC,MAAAA,O,GAAsBZ,U,CAAtBY,O;AAASC,MAAAA,Q,GAAab,U,CAAba,Q;;4BAGJC,U,WADZF,OAAO,CAAC,YAAD,C,UAGHC,QAAQ,CAACX,IAAD,C,UAGRW,QAAQ,CAACX,IAAD,C;;;;;;;;;;;;;;;;yEAIoB,I;;0EACGa,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,cAAL,GAAsBC,CAAtB,GAA0B,EAArC,C;;;;;;;eAGhCC,K,GAAA,iBAAS;AACL,eAAKC,YAAL,GAAoB,KAAKC,QAAL,CAAcC,gBAAd,EAApB;AACAZ,UAAAA,QAAQ,CAACa,EAAT,CAAY;AAAA;AAAA,0CAAYC,SAAZ,CAAsBC,SAAlC,EAA6C,KAAKC,eAAlD,EAAmE,IAAnE;AACH,S;;eAGOA,e,GAAR,2BAA0B;AACtB,cAAIC,GAAW,GAAG,CAAlB;;AAEA,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKC,aAArB,EAAoCD,CAAC,EAArC,EAAyC;AACrC,iBAAKE,cAAL,CAAoB,IAAI3B,IAAJ,CAAS,CAAT,EAAY,KAAKiB,YAAL,CAAkBF,CAAlB,GAAsB,KAAGS,GAArC,EAA0C,KAAKP,YAAL,CAAkBW,CAA5D,CAApB;;AACAJ,YAAAA,GAAG;AACN;;AAED,eAAKK,YAAL,CAAkB,YAAM;AACpBtB,YAAAA,QAAQ,CAACuB,IAAT,CAAc;AAAA;AAAA,4CAAYT,SAAZ,CAAsBU,SAApC;AACH,WAFD,EAEG,CAFH;AAGH,S;;eAGOJ,c,GAAR,wBAAuBK,GAAvB,EAAkC;AAC9B/B,UAAAA,SAAS,CAACgC,IAAV,CAAe,eAAf,EAAgC5B,MAAhC,EAAwC,UAAC6B,GAAD,EAAWC,MAAX,EAA8B;AAClE,gBAAID,GAAJ,EAAS;AACL9B,cAAAA,GAAG,CAAC,KAAD,EAAQ8B,GAAR,CAAH;AACA;AACH;;AAED,gBAAIE,SAAS,GAAGjC,WAAW,CAACgC,MAAD,CAA3B;AACAC,YAAAA,SAAS,CAACC,SAAV,CAAoBnC,IAAI,CAAC,iBAAD,CAAxB;AACAkC,YAAAA,SAAS,CAACE,WAAV,CAAsBN,GAAtB;AACH,WATD;AAUH,S;;eAGMO,S,GAAP,mBAAiBC,IAAjB,EAA+B;AAC3B,eAAKtB,QAAL,CAAcmB,SAAd,CAAwBnC,IAAI,CAAC,QAAD,CAA5B;AACA,eAAKuC,QAAL,CAAcC,iBAAd;AACA,eAAKxB,QAAL,CAAcmB,SAAd,CAAwB,KAAKI,QAA7B;AACA,eAAKvB,QAAL,CAAcyB,gBAAd,CAA+B,KAAK1B,YAApC;;AAEA,cAAIuB,IAAI,KAAK,MAAb,EAAqB;AACjB,iBAAKX,YAAL,CAAkB,YAAM;AACpBtB,cAAAA,QAAQ,CAACuB,IAAT,CAAc;AAAA;AAAA,8CAAYT,SAAZ,CAAsBU,SAApC;AACH,aAFD,EAEG,CAFH;AAGH;AACJ,S;;;QA1D2BjC,S;;;;;iBAGX,I;;;;;;;iBAGA,I","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec3, resources, find, instantiate, log, Prefab, view, director, Vec2, Size } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('MapManager')\r\nexport class MapManager extends Component {\r\n    \r\n    @property(Node)\r\n    mapNodes: Node = null!\r\n\r\n    @property(Node)\r\n    basedMap: Node = null!\r\n\r\n\r\n    private _basedMapPos: Vec3 = null!\r\n    private _earthTileNum: number = Math.floor(view.getVisibleSize().y / 80)\r\n\r\n\r\n    start () {\r\n        this._basedMapPos = this.basedMap.getWorldPosition()\r\n        director.on(GameManager.GameState.HARD_MODE, this._spawnEarthTile, this)\r\n    }\r\n\r\n    \r\n    private _spawnEarthTile() {\r\n        let cur: number = 1\r\n\r\n        for (let i=0; i<this._earthTileNum; i++) {\r\n            this._loadEarthTile(new Vec3(0, this._basedMapPos.y - 95*cur, this._basedMapPos.z))\r\n            cur ++\r\n        }\r\n\r\n        this.scheduleOnce(() => {\r\n            director.emit(GameManager.GameState.TILE_MOVE)\r\n        }, 1)\r\n    }\r\n\r\n\r\n    private _loadEarthTile(pos: Vec3) {\r\n        resources.load('prefabs/Earth', Prefab, (err: any, prefab: Prefab) => {\r\n            if (err) {\r\n                log('err', err)\r\n                return\r\n            }\r\n\r\n            let earthTile = instantiate(prefab) as Node\r\n            earthTile.setParent(find('Canvas/MapNodes'))\r\n            earthTile.setPosition(pos)\r\n        })\r\n    }\r\n\r\n\r\n    public resetTile(mode: string) {\r\n        this.basedMap.setParent(find('Canvas'))\r\n        this.mapNodes.removeAllChildren()\r\n        this.basedMap.setParent(this.mapNodes)\r\n        this.basedMap.setWorldPosition(this._basedMapPos)\r\n\r\n        if (mode === 'hard') {\r\n            this.scheduleOnce(() => {\r\n                director.emit(GameManager.GameState.TILE_MOVE)\r\n            }, 1)\r\n        }\r\n    }\r\n}\r\n"]}