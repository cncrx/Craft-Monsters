{"version":3,"sources":["file:///D:/Craft-Monsters/Craft-Monsters/assets/Scripts/Monsters.ts"],"names":["_decorator","Component","Contact2DType","PolygonCollider2D","director","Vec3","GameManager","ccclass","property","Monsters","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","node","name","active","scheduleOnce","destroy","error","v2Pos","position","v3Pos","x","y","score","_inProcess","emit","State","CRAFT","SCORE_SPAWN","GameState","GAME_OVER"],"mappings":";;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,iB,OAAAA,iB;AAAsCC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,I,OAAAA,I;;AAC5FC,MAAAA,W,gBAAAA,W;;;;;;;AACDC,MAAAA,O,GAAsBP,U,CAAtBO,O;AAASC,MAAAA,Q,GAAaR,U,CAAbQ,Q;;0BAGJC,Q,WADZF,OAAO,CAAC,UAAD,C;;;;;;;;;;;;uEAE0B,K;;;;;;;eAG9BG,K,GAAA,iBAAQ;AACJ,cAAIC,QAAQ,GAAG,KAAKC,YAAL,CAAkBT,iBAAlB,CAAf;AACAQ,UAAAA,QAAQ,CAACE,EAAT,CAAYX,aAAa,CAACY,aAA1B,EAAyC,KAAKC,cAA9C,EAA8D,IAA9D;AACH,S;;eAGDA,c,GAAA,wBAAeC,YAAf,EAAgDC,aAAhD,EAAkFC,OAAlF,EAAqH;AAAA;;AACjH,cAAIF,YAAY,CAACG,IAAb,CAAkBC,IAAlB,KAA2BH,aAAa,CAACE,IAAd,CAAmBC,IAAlD,EAAwD;AACpD,gBAAI;AACAJ,cAAAA,YAAY,CAACG,IAAb,CAAkBE,MAAlB,GAA2B,KAA3B;AACA,mBAAKC,YAAL,CAAkB,YAAM;AACpBN,gBAAAA,YAAY,CAACG,IAAb,CAAkBI,OAAlB;AACH,eAFD,EAEG,CAFH;AAGH,aALD,CAKE,OAAOC,KAAP,EAAc,CAEf;;AAED,gBAAIC,KAAK,GAAGT,YAAY,CAACG,IAAb,CAAkBO,QAA9B;AACA,gBAAIC,KAAK,GAAG,IAAItB,IAAJ,CAASoB,KAAK,CAACG,CAAf,EAAkBH,KAAK,CAACI,CAAxB,EAA2B,CAA3B,CAAZ;AAEA,gBAAIC,KAAa,GAAG,EAApB;;AACA,oBAAOd,YAAY,CAACG,IAAb,CAAkBC,IAAzB;AACI,mBAAK,WAAL;AACIU,gBAAAA,KAAK,GAAG,MAAR;AACA;;AACJ,mBAAK,WAAL;AACIA,gBAAAA,KAAK,GAAG,MAAR;AACA;;AACJ,mBAAK,WAAL;AACIA,gBAAAA,KAAK,GAAG,MAAR;AACA;;AACJ,mBAAK,gBAAL;AACIA,gBAAAA,KAAK,GAAG,MAAR;AACA;AAZR;;AAeA,gBAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,mBAAKT,YAAL,CAAkB,YAAM;AACpB,gBAAA,MAAI,CAACS,UAAL,GAAkB,IAAlB;AAEA3B,gBAAAA,QAAQ,CAAC4B,IAAT,CAAc;AAAA;AAAA,gDAAYC,KAAZ,CAAkBC,KAAhC,EAAuClB,YAAY,CAACG,IAAb,CAAkBC,IAAzD,EAA+DO,KAA/D,EAAsE,MAAtE,EAHoB,CAGwD;;AAC5EvB,gBAAAA,QAAQ,CAAC4B,IAAT,CAAc;AAAA;AAAA,gDAAYC,KAAZ,CAAkBE,WAAhC,EAA6CL,KAA7C,EAAoDH,KAApD,EAJoB,CAIuC;;AAE3D,gBAAA,MAAI,CAACL,YAAL,CAAkB,YAAM;AACpB,kBAAA,MAAI,CAACS,UAAL,GAAkB,KAAlB;AACH,iBAFD,EAEG,GAFH;AAGH,eATD,EASG,GATH,EADkB,CAUV;AACX;AAEJ,WA1CD,MA0CO,IAAId,aAAa,CAACE,IAAd,CAAmBC,IAAnB,KAA4B,UAAhC,EAA4C;AAAE;AACjDhB,YAAAA,QAAQ,CAAC4B,IAAT,CAAc;AAAA;AAAA,4CAAYI,SAAZ,CAAsBC,SAApC;AACH;AAEJ,S;;;QAzDyBpC,S","sourcesContent":["\r\nimport { _decorator, Component, Node, Contact2DType, PolygonCollider2D, IPhysics2DContact, director, Vec3, log } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Monsters')\r\nexport class Monsters extends Component {\r\n    private _inProcess: boolean = false\r\n\r\n\r\n    start() {\r\n        let collider = this.getComponent(PolygonCollider2D)!\r\n        collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this)\r\n    }\r\n\r\n    \r\n    onBeginContact(selfCollider: PolygonCollider2D, otherCollider: PolygonCollider2D, contact: IPhysics2DContact | null) {\r\n        if (selfCollider.node.name === otherCollider.node.name) { \r\n            try {\r\n                selfCollider.node.active = false\r\n                this.scheduleOnce(() => {\r\n                    selfCollider.node.destroy()\r\n                }, 1)\r\n            } catch (error) {\r\n                \r\n            }\r\n\r\n            let v2Pos = selfCollider.node.position\r\n            let v3Pos = new Vec3(v2Pos.x, v2Pos.y, 0)\r\n            \r\n            let score: string = \"\"\r\n            switch(selfCollider.node.name) {\r\n                case \"monster_1\":\r\n                    score = \"1000\"\r\n                    break\r\n                case \"monster_2\":\r\n                    score = \"2000\"\r\n                    break\r\n                case \"monster_3\":\r\n                    score = \"3000\"\r\n                    break\r\n                case \"monster_4_half\":\r\n                    score = \"4000\"\r\n                    break\r\n            }\r\n\r\n            if (!this._inProcess) {\r\n                this.scheduleOnce(() => {\r\n                    this._inProcess = true\r\n\r\n                    director.emit(GameManager.State.CRAFT, selfCollider.node.name, v3Pos, this) // 可以生成下一级怪物\r\n                    director.emit(GameManager.State.SCORE_SPAWN, score, v3Pos) // 分数增加\r\n\r\n                    this.scheduleOnce(() => {\r\n                        this._inProcess = false\r\n                    }, 0.1)\r\n                }, 0.1) // 给 0.1 秒，等碰撞运算完\r\n            }\r\n\r\n        } else if (otherCollider.node.name === \"Wall_Top\") { // 触顶后游戏失败\r\n            director.emit(GameManager.GameState.GAME_OVER)\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n"]}