{"version":3,"sources":["file:///D:/Craft-Monsters/Craft-Monsters/assets/Scripts/UIManager.ts"],"names":["_decorator","Component","Node","Label","director","find","instantiate","Prefab","resources","Animation","GameManager","ccclass","property","UIManager","type","onLoad","on","State","INIT","_initMonsterLabel","_initScoreLabel","MONSTER_CHANGE","_changeMonsterLabelNumber","SCORE_SPAWN","_loadScore","SCORE_ADD","_setScoreLabel","GameState","GAME_WIN","_setResultLabel","GAME_OVER","setResultUIActive","init_level_1","init_level_2","init_level_3","monster_1_left_label","string","String","monster_2_left_label","monster_3_left_label","scoreNode","getComponent","monsterLevel","monsterLeft","scoreNum","pos","_inProcess","load","err","prefab","console","warn","score","setParent","setPosition","scheduleOnce","setTimerLabel","min","sec","timerLabel","label","curScore","Number","anim","play","win","resultLabel","resultGotoMenu","setInGameUIActive","setMenuUIActive","active","menuUI","resultUI","inGameUI","setModeUIActive","modeUI"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Label, director, Vec3, log, find, instantiate, Prefab, resources, Animation } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UIManager')\r\nexport class UIManager extends Component {\r\n    private _inProcess: boolean = false\r\n\r\n\r\n    @property({\r\n        type: Node\r\n    })\r\n    public menuUI: Node = null!\r\n    @property({\r\n        type: Node\r\n    })\r\n    public resultUI: Node = null!\r\n    @property({\r\n        type: Node\r\n    })\r\n    public inGameUI: Node = null!\r\n    @property({\r\n        type: Node\r\n    })\r\n    public modeUI: Node = null!\r\n\r\n    \r\n    @property({\r\n        type: Label\r\n    })\r\n    monster_1_left_label: Label = null! // 还剩多少个 monster_1\r\n    @property({\r\n        type: Label\r\n    })\r\n    monster_2_left_label: Label = null!\r\n    @property({\r\n        type: Label\r\n    })\r\n    monster_3_left_label: Label = null!\r\n    @property({\r\n        type: Label\r\n    })\r\n    timerLabel: Label = null!\r\n    @property({\r\n        type: Node\r\n    })\r\n    scoreNode: Node = null!\r\n    @property({\r\n        type: Label\r\n    })\r\n    resultLabel: Label = null!\r\n\r\n\r\n    onLoad () {\r\n        director.on(GameManager.State.INIT, this._initMonsterLabel, this) // 初始化怪物剩余数量\r\n        director.on(GameManager.State.INIT, this._initScoreLabel, this) // 初始化分数\r\n        director.on(GameManager.State.MONSTER_CHANGE, this._changeMonsterLabelNumber, this) // 怪物剩余数量变化\r\n\r\n        director.on(GameManager.State.SCORE_SPAWN, this._loadScore, this) // 生成分数\r\n        director.on(GameManager.State.SCORE_ADD, this._setScoreLabel, this) // 分数增加\r\n\r\n        director.on(GameManager.GameState.GAME_WIN, () => {this._setResultLabel(true)}, this) // 游戏结束更改结算 Label\r\n        director.on(GameManager.GameState.GAME_OVER, () => {this._setResultLabel(false)}, this)\r\n\r\n        director.on(GameManager.GameState.GAME_WIN, this.setResultUIActive, this) // 游戏结束打开结算 UI\r\n        director.on(GameManager.GameState.GAME_OVER, this.setResultUIActive, this)\r\n    }\r\n\r\n\r\n    private _initMonsterLabel(init_level_1: number, init_level_2: number, init_level_3: number) {\r\n        this.monster_1_left_label.string = String(init_level_1)\r\n        this.monster_2_left_label.string = String(init_level_2)\r\n        this.monster_3_left_label.string = String(init_level_3)\r\n    }\r\n\r\n    private _initScoreLabel() {\r\n        this.scoreNode.getComponent(Label)!.string = \"0000\"\r\n    }\r\n\r\n\r\n    private _changeMonsterLabelNumber(monsterLevel: number, monsterLeft: number) {\r\n        switch(monsterLevel) {\r\n            case 1:\r\n                this.monster_1_left_label.string = String(monsterLeft)\r\n                break\r\n            case 2:\r\n                this.monster_2_left_label.string = String(monsterLeft)\r\n                break\r\n            case 3:\r\n                this.monster_3_left_label.string = String(monsterLeft)\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n    private _loadScore(scoreNum: number, pos: Vec3) {\r\n        if (!this._inProcess) {\r\n            this._inProcess = true\r\n\r\n            resources.load(\"effect/score\", Prefab, (err: any, prefab: Prefab) => {\r\n                if (err) {\r\n                    console.warn(\"err:\", err)\r\n                }\r\n\r\n                let score = instantiate(prefab) as Node\r\n                score.getComponent(Label)!.string = `+ ${scoreNum}`\r\n                score.setParent(find('Canvas/UI/'))\r\n                score.setPosition(pos)\r\n            })\r\n\r\n            this.scheduleOnce(() => {\r\n                this._inProcess = false\r\n            }, 0.1)\r\n        }\r\n    }\r\n\r\n\r\n    public setTimerLabel(min: number | string, sec: number | string) {\r\n        this.timerLabel.string =  `本局用时 ${min} 分 ${sec} 秒`\r\n    }\r\n\r\n\r\n    private _setScoreLabel(scoreNum: number) {\r\n        let label = this.scoreNode.getComponent(Label)!\r\n        let curScore: number = Number(label.string) // 目前有的分数\r\n        curScore += scoreNum\r\n        label.string = String(curScore)\r\n\r\n        let anim = this.scoreNode.getComponent(Animation)!\r\n        anim.play(\"score_add\")\r\n    }\r\n\r\n\r\n    private _setResultLabel(win: boolean) {\r\n        win ? this.resultLabel.string = '胜利！\\n游戏结束！' : this.resultLabel.string = '失败！\\n游戏结束！'\r\n    }\r\n\r\n\r\n    public resultGotoMenu() { // 结算界面去主菜单的按钮回调\r\n        this.setResultUIActive(false)\r\n        this.setInGameUIActive(false)\r\n        this.setMenuUIActive()\r\n    }\r\n\r\n\r\n    public setMenuUIActive(active: boolean = true) {\r\n        this.menuUI.active = active\r\n    }\r\n\r\n\r\n    public setResultUIActive(active: boolean = true) {\r\n        this.resultUI.active = active\r\n    }\r\n\r\n\r\n    public setInGameUIActive(active: boolean = true) {\r\n        this.inGameUI.active = active\r\n    }\r\n\r\n    public setModeUIActive(active: boolean = true) {\r\n        this.modeUI.active = active\r\n    }\r\n\r\n}\r\n"]}